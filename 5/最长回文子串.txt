题目描述： 给定一个字符串s，找到最长的回文子串。s的长度在1000以内

奇偶的处理:将在所有字符间添加一个分割符（空格），结果会使字符串长度变为奇数。
初步思路：中间扩展法，变量每个字母，在逐个遍历字母之前和之后判断是否构成回文（存在奇偶的情况）。记录长度。时间复杂度为O(N)
（方法超时。。。）

方法时间复杂度：
暴力法：判断所有子串是否为回文 O(n^3)
中心扩展： O(n^2)
DP法	:	使用2维数据存储P(i,j)代表从i-j是否为回文。	O(n^2)

Manacher : 基于中心扩展法的改进。 O(n)
	1.字符串的填充。 P[]初始化为1， p[index]代表以s'[index]的 从s'第一个字符到回文中心的距离（包括）p[index]-1即为回文串的长度
	
	2.P的计算。 定义一个用于记录最右界限MaxRight，表示当前所有回文子串能触及最右一个字符的位置。
							以及相应的对称轴pos。然后从pos往右逐个更新P[i]
							（1）i值小于MaxRight的情况	P[i]=min(P[2*pos-i], MaxRight-i) 
							（2）i值大于MaxRight的情况	P[i]=1
	